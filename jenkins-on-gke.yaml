# ---
# apiVersion: v1
# kind: Namespace
# metadata:
#   name: spinnaker
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins
  namespace: cicd 
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: cicd
  name: jenkins-master-role
rules:
- apiGroups: [""]
  resources: ["pods","events", "pods/exec","pods/watch", "pods/log", "persistentvolumeclaims"]
  verbs: ["*"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: jenkins-rolebinding
  namespace: cicd
subjects:
- kind: ServiceAccount
  name: jenkins
  namespace: cicd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jenkins-master-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-pvc
  namespace: cicd
spec:
  storageClassName: standard
  resources:
    requests:
      storage: 1Gi
  accessModes:
    - ReadWriteOnce 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: cicd
  labels:
    app: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      serviceAccountName: jenkins
      securityContext:
        runAsGroup: 1000
        runAsUser: 1000
        fsGroup: 412
      containers:
        - name: jenkin-master
          # image: jenkins/jenkins:2.204.1
          image: smartbuddy/jenkins_tf:1.0
          ports:
            - name: http-port
              containerPort: 8080
            - name: jnlp-port
              containerPort: 50000
          volumeMounts:
            - name: jenkins-vol
              mountPath: /var/jenkins_home/
            - name: docker-sock
              mountPath: /var/run/docker.sock
          imagePullPolicy: Always
      initContainers:  
        - name: increase-fd-ulimit
          image: busybox
          command: ["sh", "-c", "ulimit -n 65536"]
          securityContext:
            privileged: true
      volumes:
        - name: jenkins-vol
          persistentVolumeClaim:
            claimName: jenkins-pvc
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock

---
# Service for accessing jenkins-UI
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: cicd
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: jenkins
---
# Service for jenkins-agents
apiVersion: v1
kind: Service
metadata:
  name: jenkins-agent
  namespace: cicd
spec:
  ports:
    - port: 50000
      targetPort: 50000
      name: slavelistener
  selector:
    app: jenkins


